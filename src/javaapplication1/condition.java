/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import static javaapplication1.condition.jLabelFilter;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author bruno
 */
public class condition extends javax.swing.JFrame {

    /**
     * Creates new form cond
     */
    public condition() {
        initComponents();
        this.pack();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setTitle("Select Condition");
        MenuFrame mf = new MenuFrame();
        this.setIconImage(mf.getIconImage());
        this.jComboBoxValues.setVisible(false);
        this.jTextFieldValues.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Header = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        Body = new javax.swing.JPanel();
        jComboBoxValues = new javax.swing.JComboBox<>();
        jTextFieldValues = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxCondition = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jRadioBin = new javax.swing.JRadioButton();
        jRadioOct = new javax.swing.JRadioButton();
        jRadioDec = new javax.swing.JRadioButton();
        jLabelFilter = new javax.swing.JLabel();
        Footer = new javax.swing.JPanel();
        ipOk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Header.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("UnJamoBatang", 1, 15)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Enter the conditions that the filter must meet.");
        Header.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 862, 33));

        getContentPane().add(Header, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 862, 40));

        Body.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBoxValues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxValuesActionPerformed(evt);
            }
        });
        Body.add(jComboBoxValues, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 310, 190, -1));
        Body.add(jTextFieldValues, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 310, 190, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Filter:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Condition:");

        jComboBoxCondition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "==", ">", "<" }));
        jComboBoxCondition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxConditionActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Value:");

        jRadioBin.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioBin.setText("HEX");
        jRadioBin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioBinActionPerformed(evt);
            }
        });

        jRadioOct.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioOct.setText("OCT");
        jRadioOct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioOctActionPerformed(evt);
            }
        });

        jRadioDec.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioDec.setText("DEC");
        jRadioDec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioDecActionPerformed(evt);
            }
        });

        jLabelFilter.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelFilter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(138, 138, 138)
                .addComponent(jRadioBin)
                .addGap(80, 80, 80)
                .addComponent(jRadioOct)
                .addGap(79, 79, 79)
                .addComponent(jRadioDec)
                .addGap(0, 154, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(jComboBoxCondition, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jLabelFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabelFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxCondition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(62, 62, 62)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRadioBin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jRadioOct)
                        .addComponent(jRadioDec))))
        );

        Body.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 650, 240));

        getContentPane().add(Body, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 862, 365));

        ipOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ok.png"))); // NOI18N
        ipOk.setText("OK");
        ipOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FooterLayout = new javax.swing.GroupLayout(Footer);
        Footer.setLayout(FooterLayout);
        FooterLayout.setHorizontalGroup(
            FooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FooterLayout.createSequentialGroup()
                .addContainerGap(763, Short.MAX_VALUE)
                .addComponent(ipOk)
                .addGap(32, 32, 32))
        );
        FooterLayout.setVerticalGroup(
            FooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FooterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ipOk)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        getContentPane().add(Footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 445, 860, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    CreateUdpFilter udp = new CreateUdpFilter();
    CreateIpFilter ip = new CreateIpFilter();
    CreateTcpFilter tcp = new CreateTcpFilter();
    String t = "";
    /*Add the selected conditions to the field of the header that you want to create.*/
    private void ipOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipOkActionPerformed
        // TODO add your handling code here:
        if(t == "UDP"){
           switch(jComboBoxCondition.getSelectedIndex()){
                case 0:
                    udp.toret += " == ";
                    break;

                case 1:
                    udp.toret += " > ";
                    break;

                case 2:
                    udp.toret += " < ";
                    break;
            }
            if(jComboBoxValues.getSelectedItem() != null){
                udp.toret += '"';
                udp.toret += jComboBoxValues.getSelectedItem();
                udp.toret += '"';
            }else{
                if(jTextFieldValues.getText().isEmpty()) jTextFieldValues.setText("0");
                udp.toret += '"' + jTextFieldValues.getText() + '"';
                jTextFieldValues.setText("");
            }
            dispose();
            udp.setVisible(true); 
        }else if(t == "IP"){
            switch(jComboBoxCondition.getSelectedIndex()){
                case 0:
                    ip.toret += " == ";
                    break;

                case 1:
                    ip.toret += " > ";
                    break;

                case 2:
                    ip.toret += " < ";
                    break;
            }
            if(jComboBoxValues.getSelectedItem() != null){
                ip.toret += '"';
                ip.toret += jComboBoxValues.getSelectedItem();
                ip.toret += '"';
            }else{
                if(jTextFieldValues.getText().isEmpty()) jTextFieldValues.setText("0");
                ip.toret += '"' + jTextFieldValues.getText() + '"';
                jTextFieldValues.setText("");
            }   
            dispose();
            ip.setVisible(true); 
        }else if(t == "TCP"){
            switch(jComboBoxCondition.getSelectedIndex()){
                case 0:
                    tcp.toret += " == ";
                    break;

                case 1:
                    tcp.toret += " > ";
                    break;

                case 2:
                    tcp.toret += " < ";
                    break;
            }
        
            if(jComboBoxValues.getSelectedItem() != null){
                tcp.toret += '"';
                tcp.toret += jComboBoxValues.getSelectedItem();
                tcp.toret += '"';
            }else{
                if(jTextFieldValues.getText().isEmpty()) jTextFieldValues.setText("0");
                tcp.toret += '"' + jTextFieldValues.getText() + '"';
                jTextFieldValues.setText("");
            }
            dispose();
            tcp.setVisible(true); 
        }
    }//GEN-LAST:event_ipOkActionPerformed

    private void jRadioBinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioBinActionPerformed
        // TODO add your handling code here:
        if(jRadioBin.isSelected()){
            jRadioDec.setSelected(false);
            jRadioOct.setSelected(false);
            if(jLabelFilter.getText() == "udp[0:2]" || jLabelFilter.getText() == "udp[2:2]" || jLabelFilter.getText() == "udp[4:2]" 
                    || jLabelFilter.getText() == "udp[6:2]" || jLabelFilter.getText() == "ip[2:2]" || jLabelFilter.getText() == "ip[4:2]"
                    || jLabelFilter.getText() == "(ip[10:2])" || jLabelFilter.getText() == "tcp[0:2]" || jLabelFilter.getText() == "tcp[2:2]"
                    || jLabelFilter.getText() == "tcp[16:2]" || jLabelFilter.getText() == "tcp[18:2]" || jLabelFilter.getText() == "tcp[14:2]")
            {
                String[] values =new String[65536];
                for(int n = 0; n < 65536; n++) {
                    values[n] = ("0x"+String.valueOf(Integer.toHexString(n)).toUpperCase());
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(ip[0:1] >> 4)" || jLabelFilter.getText() == "(tcp[12:1] >> 4)"){
                String[] values =new String[16];
                for(int n = 0; n < 16; n++) {
                    values[n] = ("0x"+String.valueOf(Integer.toHexString(n)).toUpperCase()+"0");
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "((ip[0:1] << 4) >> 4)"){
                String[] values =new String[16];
                for(int n = 0; n < 16; n++) {
                    values[n] = ("0x"+String.valueOf(Integer.toHexString(n)).toUpperCase());
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(ip[1:1] >> 2)"){
                String[] values =new String[64];
                int i = 1;
                values[0] = ("0x"+String.valueOf(Integer.toHexString(0)).toUpperCase());
                for(int n = 4; n < 253; n+=4) {
                    values[i] = ("0x"+String.valueOf(Integer.toHexString(n)).toUpperCase());
                    i += 1;
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "((ip[1:1] << 6) >> 6)"){
                String[] values =new String[4];
                for(int n = 0; n < 4; n++) {
                    values[n] = ("0x"+String.valueOf(Integer.toHexString(n)).toUpperCase());
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "((tcp[12:1] >> 1) & 0x07)"){
                String[] values =new String[8];
                int i = 1;
                values[0] = ("0x"+String.valueOf(Integer.toHexString(0)).toUpperCase());
                for(int n = 2; n < 15; n+=2) {
                    values[i] = ("0x"+String.valueOf(Integer.toHexString(n)).toUpperCase());
                    i += 1;
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(ip[6:1] >> 5)"){
                String[] values =new String[8];
                int i = 1;
                values[0] = ("0x"+String.valueOf(Integer.toHexString(0)).toUpperCase());
                for(int n = 32; n < 226; n+=32) {
                    values[i] = ("0x"+String.valueOf(Integer.toHexString(n)).toUpperCase());
                    i += 1;
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "((ip[6:2] << 3) >> 3)"){
                String[] values =new String[8192];
                for(int n = 0; n < 8192; n++) {
                    values[n] = ("0x"+String.valueOf(Integer.toHexString(n)).toUpperCase());
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(ip[8:1])" || jLabelFilter.getText() == "(ip[9:1])"){
                String[] values =new String[256];
                for(int n = 0; n < 256; n++) {
                    values[n] = ("0x"+String.valueOf(Integer.toHexString(n)).toUpperCase());
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(ip[12:4])" || jLabelFilter.getText() == "(ip[16:4])" 
                    || jLabelFilter.getText() == "tcp[4:4]" || jLabelFilter.getText() == "tcp[8:4]"){
                this.jTextFieldValues.setText("0x");
                this.jTextFieldValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(ip[20:16])"){
                this.jTextFieldValues.setText("0x");
                this.jTextFieldValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[12:1] & 0x01)"){
                String[] values =new String[2];
                for(int n = 0; n < 2; n++) {
                    values[n] = ("0x"+String.valueOf(Integer.toHexString(n)).toUpperCase()+"0");
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "tcp[20:40]"){
                this.jTextFieldValues.setText("0x");
                this.jTextFieldValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x80)"){
                String[] values =new String[2];
                values[0] = ("0x"+String.valueOf(Integer.toHexString(0)).toUpperCase());
                values[1] = ("0x"+String.valueOf(Integer.toHexString(128)).toUpperCase());
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x40)"){
                String[] values =new String[2];
                values[0] = ("0x"+String.valueOf(Integer.toHexString(0)).toUpperCase());
                values[1] = ("0x"+String.valueOf(Integer.toHexString(64)).toUpperCase());
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x20)"){
                String[] values =new String[2];
                values[0] = ("0x"+String.valueOf(Integer.toHexString(0)).toUpperCase());
                values[1] = ("0x"+String.valueOf(Integer.toHexString(32)).toUpperCase());
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x10)"){
                String[] values =new String[2];
                values[0] = ("0x"+String.valueOf(Integer.toHexString(0)).toUpperCase());
                values[1] = ("0x"+String.valueOf(Integer.toHexString(16)).toUpperCase());
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x08)"){
                String[] values =new String[2];
                values[0] = ("0x"+String.valueOf(Integer.toHexString(0)).toUpperCase());
                values[1] = ("0x"+String.valueOf(Integer.toHexString(8)).toUpperCase());
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x04)"){
                String[] values =new String[2];
                values[0] = ("0x"+String.valueOf(Integer.toHexString(0)).toUpperCase());
                values[1] = ("0x"+String.valueOf(Integer.toHexString(4)).toUpperCase());
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x02)"){
                String[] values =new String[2];
                values[0] = ("0x"+String.valueOf(Integer.toHexString(0)).toUpperCase());
                values[1] = ("0x"+String.valueOf(Integer.toHexString(2)).toUpperCase());
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x01)"){
                String[] values =new String[2];
                values[0] = ("0x"+String.valueOf(Integer.toHexString(0)).toUpperCase());
                values[1] = ("0x"+String.valueOf(Integer.toHexString(1)).toUpperCase());
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }

        }else{
            this.jTextFieldValues.setText("");
            this.jComboBoxValues.setVisible(false);
            this.jTextFieldValues.setVisible(false);
            this.jComboBoxValues.setModel(new DefaultComboBoxModel());
        }
    }//GEN-LAST:event_jRadioBinActionPerformed

    private void jRadioOctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioOctActionPerformed
        // TODO add your handling code here:
        if(jRadioOct.isSelected()){
            jRadioBin.setSelected(false);
            jRadioDec.setSelected(false);
            if(jLabelFilter.getText() == "udp[0:2]" || jLabelFilter.getText() == "udp[2:2]" || jLabelFilter.getText() == "udp[4:2]" 
                    || jLabelFilter.getText() == "udp[6:2]" || jLabelFilter.getText() == "ip[2:2]" || jLabelFilter.getText() == "ip[4:2]"
                    || jLabelFilter.getText() == "(ip[10:2])" || jLabelFilter.getText() == "tcp[0:2]" || jLabelFilter.getText() == "tcp[2:2]"
                    || jLabelFilter.getText() == "tcp[16:2]" || jLabelFilter.getText() == "tcp[18:2]" || jLabelFilter.getText() == "tcp[14:2]")
            {
                String[] values =new String[65536];
                for(int n = 0; n < 65536; n++) {
                    values[n] = ("0"+String.valueOf(Integer.toOctalString(n)).toUpperCase());
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(ip[0:1] >> 4)" || jLabelFilter.getText() == "(tcp[12:1] >> 4)"){
                String[] values =new String[16];
                int i = 1;
                values[0] = ("0"+String.valueOf(Integer.toOctalString(0)).toUpperCase());
                for(int n = 16; n < 241; n+=16) {
                    values[i] = ("0"+String.valueOf(Integer.toOctalString(n)).toUpperCase());
                    i += 1;
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "((ip[0:1] << 4) >> 4)"){
                String[] values =new String[16];
                for(int n = 0; n < 16; n++) {
                    values[n] = ("0"+String.valueOf(Integer.toOctalString(n)).toUpperCase());
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(ip[1:1] >> 2)"){
                String[] values =new String[64];
                int i = 1;
                values[0] = ("0x"+String.valueOf(Integer.toOctalString(0)).toUpperCase());
                for(int n = 4; n < 253; n+=4) {
                    values[i] = ("0x"+String.valueOf(Integer.toOctalString(n)).toUpperCase());
                    i += 1;
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "((ip[1:1] << 6) >> 6)"){
                String[] values =new String[4];
                for(int n = 0; n < 4; n++) {
                    values[n] = ("0"+String.valueOf(Integer.toOctalString(n)).toUpperCase());
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "((tcp[12:1] >> 1) & 0x07)"){
                String[] values =new String[8];
                int i = 1;
                values[0] = ("0"+String.valueOf(Integer.toOctalString(0)).toUpperCase());
                for(int n = 2; n < 15; n+=2) {
                    values[i] = ("0"+String.valueOf(Integer.toOctalString(n)).toUpperCase());
                    i += 1;
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(ip[6:1] >> 5)"){
                String[] values =new String[8];
                int i = 1;
                values[0] = ("0"+String.valueOf(Integer.toOctalString(0)).toUpperCase());
                for(int n = 32; n < 226; n+=32) {
                    values[i] = ("0"+String.valueOf(Integer.toOctalString(n)).toUpperCase());
                    i += 1;
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "((ip[6:2] << 3) >> 3)"){
                String[] values =new String[8192];
                for(int n = 0; n < 8192; n++) {
                    values[n] = ("0"+String.valueOf(Integer.toOctalString(n)).toUpperCase());
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(ip[8:1])" || jLabelFilter.getText() == "(ip[9:1])"){
                String[] values =new String[256];
                for(int n = 0; n < 256; n++) {
                    values[n] = ("0"+String.valueOf(Integer.toOctalString(n)).toUpperCase());
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(ip[12:4])" || jLabelFilter.getText() == "(ip[16:4])" 
                    || jLabelFilter.getText() == "tcp[4:4]" || jLabelFilter.getText() == "tcp[8:4]"){
                this.jTextFieldValues.setText("0");
                this.jTextFieldValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(ip[20:16])"){
                this.jTextFieldValues.setText("0");
                this.jTextFieldValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[12:1] & 0x01)"){
                String[] values =new String[2];
                values[0] = ("0"+Integer.toOctalString(0).toUpperCase());
                values[1] = ("0"+Integer.toOctalString(256).toUpperCase());
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "tcp[20:40]"){
                this.jTextFieldValues.setText("0");
                this.jTextFieldValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x80)"){
                String[] values =new String[2];
                values[0] = ("0"+String.valueOf(Integer.toOctalString(0)).toUpperCase());
                values[1] = ("0"+String.valueOf(Integer.toOctalString(128)).toUpperCase());
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x40)"){
                String[] values =new String[2];
                values[0] = ("0"+String.valueOf(Integer.toOctalString(0)).toUpperCase());
                values[1] = ("0"+String.valueOf(Integer.toOctalString(64)).toUpperCase());
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x20)"){
                String[] values =new String[2];
                values[0] = ("0"+String.valueOf(Integer.toOctalString(0)).toUpperCase());
                values[1] = ("0"+String.valueOf(Integer.toOctalString(32)).toUpperCase());
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x10)"){
                String[] values =new String[2];
                values[0] = ("0"+String.valueOf(Integer.toOctalString(0)).toUpperCase());
                values[1] = ("0"+String.valueOf(Integer.toOctalString(16)).toUpperCase());
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x08)"){
                String[] values =new String[2];
                values[0] = ("0"+String.valueOf(Integer.toOctalString(0)).toUpperCase());
                values[1] = ("0"+String.valueOf(Integer.toOctalString(8)).toUpperCase());
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x04)"){
                String[] values =new String[2];
                values[0] = ("0"+String.valueOf(Integer.toOctalString(0)).toUpperCase());
                values[1] = ("0"+String.valueOf(Integer.toOctalString(4)).toUpperCase());
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x02)"){
                String[] values =new String[2];
                values[0] = ("0"+String.valueOf(Integer.toOctalString(0)).toUpperCase());
                values[1] = ("0"+String.valueOf(Integer.toOctalString(2)).toUpperCase());
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x01)"){
                String[] values =new String[2];
                values[0] = ("0"+String.valueOf(Integer.toOctalString(0)).toUpperCase());
                values[1] = ("0"+String.valueOf(Integer.toOctalString(1)).toUpperCase());
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }

        }else{
            this.jTextFieldValues.setText("");
            this.jComboBoxValues.setVisible(false);
            this.jTextFieldValues.setVisible(false);
            this.jComboBoxValues.setModel(new DefaultComboBoxModel());
        }
    }//GEN-LAST:event_jRadioOctActionPerformed

    private void jComboBoxConditionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxConditionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxConditionActionPerformed

    private void jComboBoxValuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxValuesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxValuesActionPerformed

    private void jRadioDecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioDecActionPerformed
        // TODO add your handling code here:
        if(jRadioDec.isSelected()){
            jRadioBin.setSelected(false);
            jRadioOct.setSelected(false);
            if(jLabelFilter.getText() == "udp[0:2]" || jLabelFilter.getText() == "udp[2:2]" || jLabelFilter.getText() == "udp[4:2]" 
                    || jLabelFilter.getText() == "udp[6:2]" || jLabelFilter.getText() == "ip[2:2]" || jLabelFilter.getText() == "ip[4:2]"
                    || jLabelFilter.getText() == "(ip[10:2])" || jLabelFilter.getText() == "tcp[0:2]" || jLabelFilter.getText() == "tcp[2:2]"
                    || jLabelFilter.getText() == "tcp[16:2]" || jLabelFilter.getText() == "tcp[18:2]" || jLabelFilter.getText() == "tcp[14:2]")
            {
                String[] values =new String[65536];
                for(int n = 0; n < 65536; n++) {
                    values[n] = (String.valueOf(n));
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(ip[0:1] >> 4)" || jLabelFilter.getText() == "(tcp[12:1] >> 4)"){
                String[] values =new String[16];
                int i = 1;
                values[0] = (String.valueOf(0));
                for(int n = 16; n < 241; n+=16) {
                    values[i] = (String.valueOf(n));
                    i += 1;
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "((ip[0:1] << 4) >> 4)"){
                String[] values =new String[16];
                for(int n = 0; n < 16; n++) {
                    values[n] = (String.valueOf(n));
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(ip[1:1] >> 2)"){
                String[] values =new String[64];
                int i = 1;
                values[0] = (String.valueOf(0));
                for(int n = 4; n < 253; n+=4) {
                    values[i] = (String.valueOf(n));
                    i += 1;
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "((ip[1:1] << 6) >> 6)"){
                String[] values =new String[4];
                for(int n = 0; n < 4; n++) {
                    values[n] = (String.valueOf(n));
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "((tcp[12:1] >> 1) & 0x07)"){
                String[] values =new String[8];
                int i = 1;
                values[0] = (String.valueOf(0));
                for(int n = 2; n < 15; n+=2) {
                    values[i] = (String.valueOf(n));
                    i += 1;
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(ip[6:1] >> 5)" ){
                String[] values =new String[8];
                int i = 1;
                values[0] = (String.valueOf(0));
                for(int n = 32; n < 226; n+=32) {
                    values[i] = (String.valueOf(n));
                    i += 1;
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "((ip[6:2] << 3) >> 3)"){
                String[] values =new String[8192];
                for(int n = 0; n < 8192; n++) {
                    values[n] = (String.valueOf(n));
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(ip[8:1])" || jLabelFilter.getText() == "(ip[9:1])"){
                String[] values =new String[256];
                for(int n = 0; n < 256; n++) {
                    values[n] = (String.valueOf(n));
                }
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(ip[12:4])" || jLabelFilter.getText() == "(ip[16:4])" 
                    || jLabelFilter.getText() == "tcp[4:4]" || jLabelFilter.getText() == "tcp[8:4]"){
                this.jTextFieldValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(ip[20:16])"){
                this.jTextFieldValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[12:1] & 0x01)"
                    || jLabelFilter.getText() == "(tcp[13:1] & 0x10)"){
                String[] values =new String[2];
                values[0] = (String.valueOf(0));
                values[1] = (String.valueOf(256));
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "tcp[20:40]"){
                this.jTextFieldValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x80)"){
                String[] values =new String[2];
                values[0] = (String.valueOf(0));
                values[1] = (String.valueOf(128));
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x40)"){
                String[] values =new String[2];
                values[0] = (String.valueOf(0));
                values[1] = (String.valueOf(64));
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x20)"){
                String[] values =new String[2];
                values[0] = (String.valueOf(0));
                values[1] = (String.valueOf(32));
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x10)"){
                String[] values =new String[2];
                values[0] = (String.valueOf(0));
                values[1] = (String.valueOf(16));
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x08)"){
                String[] values =new String[2];
                values[0] = (String.valueOf(0));
                values[1] = (String.valueOf(8));
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x04)"){
                String[] values =new String[2];
                values[0] = (String.valueOf(0));
                values[1] = (String.valueOf(4));
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x02)"){
                String[] values =new String[2];
                values[0] = (String.valueOf(0));
                values[1] = (String.valueOf(2));
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }else if(jLabelFilter.getText() == "(tcp[13:1] & 0x01)"){
                String[] values =new String[2];
                values[0] = (String.valueOf(0));
                values[1] = (String.valueOf(1));
                this.jComboBoxValues.setModel(new DefaultComboBoxModel(values));
                this.jComboBoxValues.setVisible(true);
            }

        }else{
            this.jTextFieldValues.setText("");
            this.jComboBoxValues.setVisible(false);
            this.jTextFieldValues.setVisible(false);

            this.jComboBoxValues.setModel(new DefaultComboBoxModel());
        }
    }//GEN-LAST:event_jRadioDecActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(condition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(condition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(condition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(condition.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new condition().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Body;
    private javax.swing.JPanel Footer;
    private javax.swing.JPanel Header;
    private javax.swing.JButton ipOk;
    private javax.swing.JComboBox<String> jComboBoxCondition;
    private javax.swing.JComboBox<String> jComboBoxValues;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    public static javax.swing.JLabel jLabelFilter;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioBin;
    private javax.swing.JRadioButton jRadioDec;
    private javax.swing.JRadioButton jRadioOct;
    private javax.swing.JTextField jTextFieldValues;
    // End of variables declaration//GEN-END:variables
}
