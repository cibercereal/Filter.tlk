/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import static javaapplication1.SeeFilter.jTextArea1;
import javax.swing.JOptionPane;

/**
 *
 * @author bruno
 */
public class SeeFilter extends javax.swing.JFrame {

    /**
     * Creates new form See
     */
    public SeeFilter() {
        initComponents();
        this.pack();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setTitle("See Filter");
        MenuFrame mf = new MenuFrame();
        this.setIconImage(mf.getIconImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Body = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        Footer = new javax.swing.JPanel();
        IpBack = new javax.swing.JButton();
        ipAddAnotherFilter = new javax.swing.JButton();
        ipExportFile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Body.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        Body.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 0, 600, 330));

        getContentPane().add(Body, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 862, 365));

        IpBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        IpBack.setText("Back");
        IpBack.setAlignmentY(0.0F);
        IpBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IpBackActionPerformed(evt);
            }
        });

        ipAddAnotherFilter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        ipAddAnotherFilter.setText("Add Another Filter");
        ipAddAnotherFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipAddAnotherFilterActionPerformed(evt);
            }
        });

        ipExportFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/export.png"))); // NOI18N
        ipExportFile.setText("Export File");
        ipExportFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipExportFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FooterLayout = new javax.swing.GroupLayout(Footer);
        Footer.setLayout(FooterLayout);
        FooterLayout.setHorizontalGroup(
            FooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FooterLayout.createSequentialGroup()
                .addContainerGap(504, Short.MAX_VALUE)
                .addComponent(ipExportFile)
                .addGap(18, 18, 18)
                .addComponent(ipAddAnotherFilter)
                .addGap(18, 18, 18)
                .addComponent(IpBack, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        FooterLayout.setVerticalGroup(
            FooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FooterLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(FooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IpBack)
                    .addComponent(ipAddAnotherFilter)
                    .addComponent(ipExportFile))
                .addGap(8, 8, 8))
        );

        getContentPane().add(Footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 445, 860, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String ret = "";
    /*Allows the return to the previous menu.*/
    private void IpBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IpBackActionPerformed
        // TODO add your handling code here:
        if(ret == "IP"){
            CreateIpFilter obj = new CreateIpFilter();
            String text = jTextArea1.getText();
            obj.toret = text;
            obj.setVisible(true);
        }else if(ret == "UDP"){
            CreateUdpFilter obj = new CreateUdpFilter();
            String text = jTextArea1.getText();
            obj.toret = text;
            obj.setVisible(true);
        }else if(ret == "TCP"){
            CreateTcpFilter obj = new CreateTcpFilter();
            String text = jTextArea1.getText();
            obj.toret = text;
            obj.setVisible(true);
        }else{
            nDpiFilter obj = new nDpiFilter();
            String text = jTextArea1.getText();
            obj.toret = text;
            obj.setVisible(true);
        }
        dispose();
    }//GEN-LAST:event_IpBackActionPerformed

    /*It allows adding a new filter to those already created. Send the user to the filter selection menu.*/
    private void ipAddAnotherFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipAddAnotherFilterActionPerformed
        // TODO add your handling code here:
        SelectTypeFilter obj = new SelectTypeFilter();
        obj.text = jTextArea1.getText();
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_ipAddAnotherFilterActionPerformed

    /*It allows to export the filters created on a file to which the name must be inserted. 
    If the file already exists, you can overwrite or add the new filters to existing ones.*/
    private void ipExportFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipExportFileActionPerformed
        // TODO add your handling code here:
        try {
            String [] cmd = {"mkdir","-p","/tmp/created"};
            Runtime.getRuntime().exec(cmd);
        } catch (IOException ioe) {
            JOptionPane.showMessageDialog(this, "Invalid comand.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        javax.swing.JFileChooser jF1 = new javax.swing.JFileChooser("/tmp/created");
        String path = "";
        try{
            if(jF1.showSaveDialog(null) == jF1.APPROVE_OPTION){
            path = jF1.getSelectedFile().getAbsolutePath();
            //path = "nDPI-dev/bruno/filtrosCreados";
            
                if(new File(path).exists())
                {
                    if(JOptionPane.OK_OPTION == JOptionPane.showConfirmDialog(this,"The file exists. Do you want to replace it?","Export File",JOptionPane.YES_NO_OPTION)){
                        File file = new File(path);
                        BufferedWriter bw;

                        bw = new BufferedWriter(new FileWriter(file));
                        jTextArea1.write(bw);
                        bw.close();
                    }else{
                        File file = new File(path);
                        FileWriter fw = new FileWriter(file.getAbsoluteFile(), true);
                        
                        jTextArea1.setText("\n"+jTextArea1.getText());
                        jTextArea1.write(fw);
                        fw.close();
                    }
                }else{
                    File file = new File(path);
                    BufferedWriter bw;
                    
                    bw = new BufferedWriter(new FileWriter(file));
                    jTextArea1.write(bw);
                    bw.close();
                } 
            }
        }catch (Exception ex){
            ex.printStackTrace();
        }finally{
            SelectTypeFilter obj = new SelectTypeFilter();
            obj.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_ipExportFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SeeFilter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SeeFilter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SeeFilter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SeeFilter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SeeFilter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Body;
    private javax.swing.JPanel Footer;
    private javax.swing.JButton IpBack;
    private javax.swing.JButton ipAddAnotherFilter;
    private javax.swing.JButton ipExportFile;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
